0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', 'forever', '-g' ]
2 info using npm@1.3.14
3 info using node@v0.10.22
4 verbose cache add [ 'forever', null ]
5 verbose cache add name=undefined spec="forever" args=["forever",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'forever',
6 verbose parsed url   path: 'forever',
6 verbose parsed url   href: 'forever' }
7 silly lockFile e07f8c4a-forever forever
8 verbose lock forever /Users/KHC/.npm/e07f8c4a-forever.lock
9 verbose tar pack [ '/var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/tmp.tgz',
9 verbose tar pack   'forever' ]
10 verbose tarball /var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/tmp.tgz
11 verbose folder forever
12 info prepublish forever@0.15.1
13 silly lockFile a9b7238b-tar-forever tar://forever
14 verbose lock tar://forever /Users/KHC/.npm/a9b7238b-tar-forever.lock
15 silly lockFile c3677642-97677-0-1534832448232919-tmp-tgz tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/tmp.tgz
16 verbose lock tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/tmp.tgz /Users/KHC/.npm/c3677642-97677-0-1534832448232919-tmp-tgz.lock
17 silly lockFile a9b7238b-tar-forever tar://forever
18 silly lockFile a9b7238b-tar-forever tar://forever
19 silly lockFile c3677642-97677-0-1534832448232919-tmp-tgz tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/tmp.tgz
20 silly lockFile c3677642-97677-0-1534832448232919-tmp-tgz tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/tmp.tgz
21 verbose tar unpack /var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/tmp.tgz
22 silly lockFile 73a73430-97677-0-1534832448232919-package tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/package
23 verbose lock tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/package /Users/KHC/.npm/73a73430-97677-0-1534832448232919-package.lock
24 silly lockFile c3677642-97677-0-1534832448232919-tmp-tgz tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/tmp.tgz
25 verbose lock tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/tmp.tgz /Users/KHC/.npm/c3677642-97677-0-1534832448232919-tmp-tgz.lock
26 silly gunzTarPerm modes [ '755', '644' ]
27 silly gunzTarPerm extractEntry package.json
28 silly gunzTarPerm extractEntry .npmignore
29 silly gunzTarPerm extractEntry README.md
30 silly gunzTarPerm extractEntry LICENSE
31 silly gunzTarPerm extractEntry CHANGELOG.md
32 silly gunzTarPerm extractEntry .editorconfig
33 silly gunzTarPerm extractEntry .jshintrc
34 silly gunzTarPerm extractEntry bin/forever
35 silly gunzTarPerm extractEntry bin/monitor
36 silly gunzTarPerm extractEntry lib/forever.js
37 silly gunzTarPerm extractEntry lib/forever/cli.js
38 silly gunzTarPerm extractEntry lib/forever/worker.js
39 silly gunzTarPerm extractEntry .travis.yml
40 silly gunzTarPerm extractEntry test/cli-test
41 silly gunzTarPerm extractEntry test/core/daemonic-inheritance-test.js
42 silly gunzTarPerm extractEntry test/core/start-stop-json-array-test.js
43 silly gunzTarPerm extractEntry test/core/start-stop-json-obj-test.js
44 silly gunzTarPerm extractEntry test/core/start-stop-relative-test.js
45 silly gunzTarPerm extractEntry test/core/stopall-peaceful-test.js
46 silly gunzTarPerm extractEntry test/core/stopbypid-peaceful-test.js
47 silly gunzTarPerm extractEntry test/core/tail-stopall-test.js
48 silly gunzTarPerm extractEntry test/fixtures/cluster-fork-mode.js
49 silly gunzTarPerm extractEntry test/fixtures/log-on-interval.js
50 silly gunzTarPerm extractEntry test/fixtures/server.js
51 silly gunzTarPerm extractEntry test/fixtures/start-daemon.js
52 silly gunzTarPerm extractEntry test/fixtures/server.json
53 silly gunzTarPerm extractEntry test/fixtures/servers.json
54 silly gunzTarPerm extractEntry test/helpers/index.js
55 silly gunzTarPerm extractEntry test/helpers/macros.js
56 silly gunzTarPerm extractEntry test/helpers/mocks/child-process.js
57 silly gunzTarPerm extractEntry test/helpers/mocks/monitor.js
58 silly gunzTarPerm extractEntry test/helpers/mocks/stream.js
59 silly gunzTarPerm extractEntry test/worker/multiple-workers-test.js
60 silly gunzTarPerm extractEntry test/worker/simple-test.js
61 silly lockFile 73a73430-97677-0-1534832448232919-package tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/package
62 silly lockFile 73a73430-97677-0-1534832448232919-package tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/package
63 silly lockFile c3677642-97677-0-1534832448232919-tmp-tgz tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/tmp.tgz
64 silly lockFile c3677642-97677-0-1534832448232919-tmp-tgz tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/tmp.tgz
65 verbose tar pack [ '/Users/KHC/.npm/forever/0.15.1/package.tgz',
65 verbose tar pack   '/var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/package' ]
66 verbose tarball /Users/KHC/.npm/forever/0.15.1/package.tgz
67 verbose folder /var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/package
68 silly lockFile 73a73430-97677-0-1534832448232919-package tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/package
69 verbose lock tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/package /Users/KHC/.npm/73a73430-97677-0-1534832448232919-package.lock
70 silly lockFile 003347ca-C-npm-forever-0-15-1-package-tgz tar:///Users/KHC/.npm/forever/0.15.1/package.tgz
71 verbose lock tar:///Users/KHC/.npm/forever/0.15.1/package.tgz /Users/KHC/.npm/003347ca-C-npm-forever-0-15-1-package-tgz.lock
72 silly lockFile 73a73430-97677-0-1534832448232919-package tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/package
73 silly lockFile 73a73430-97677-0-1534832448232919-package tar:///var/folders/tb/mw5x2k7j48q1hwshql734dn40000gn/T/npm-4402-tZEVbzXE/1448030897677-0.1534832448232919/package
74 silly lockFile 003347ca-C-npm-forever-0-15-1-package-tgz tar:///Users/KHC/.npm/forever/0.15.1/package.tgz
75 silly lockFile 003347ca-C-npm-forever-0-15-1-package-tgz tar:///Users/KHC/.npm/forever/0.15.1/package.tgz
76 silly lockFile b81b01ed-s-KHC-npm-forever-0-15-1-package /Users/KHC/.npm/forever/0.15.1/package
77 verbose lock /Users/KHC/.npm/forever/0.15.1/package /Users/KHC/.npm/b81b01ed-s-KHC-npm-forever-0-15-1-package.lock
78 silly lockFile b81b01ed-s-KHC-npm-forever-0-15-1-package /Users/KHC/.npm/forever/0.15.1/package
79 silly lockFile b81b01ed-s-KHC-npm-forever-0-15-1-package /Users/KHC/.npm/forever/0.15.1/package
80 verbose tar unpack /Users/KHC/.npm/forever/0.15.1/package.tgz
81 silly lockFile 36e8fbce-s-KHC-npm-forever-0-15-1-package tar:///Users/KHC/.npm/forever/0.15.1/package
82 verbose lock tar:///Users/KHC/.npm/forever/0.15.1/package /Users/KHC/.npm/36e8fbce-s-KHC-npm-forever-0-15-1-package.lock
83 silly lockFile 003347ca-C-npm-forever-0-15-1-package-tgz tar:///Users/KHC/.npm/forever/0.15.1/package.tgz
84 verbose lock tar:///Users/KHC/.npm/forever/0.15.1/package.tgz /Users/KHC/.npm/003347ca-C-npm-forever-0-15-1-package-tgz.lock
85 silly gunzTarPerm modes [ '755', '644' ]
86 silly gunzTarPerm extractEntry package.json
87 silly gunzTarPerm extractEntry .npmignore
88 silly gunzTarPerm extractEntry README.md
89 silly gunzTarPerm extractEntry LICENSE
90 silly gunzTarPerm extractEntry CHANGELOG.md
91 silly gunzTarPerm extractEntry .jshintrc
92 silly gunzTarPerm extractEntry .editorconfig
93 silly gunzTarPerm extractEntry bin/forever
94 silly gunzTarPerm extractEntry bin/monitor
95 silly gunzTarPerm extractEntry lib/forever.js
96 silly gunzTarPerm extractEntry lib/forever/cli.js
97 silly gunzTarPerm extractEntry lib/forever/worker.js
98 silly gunzTarPerm extractEntry .travis.yml
99 silly gunzTarPerm extractEntry test/cli-test
100 silly gunzTarPerm extractEntry test/core/daemonic-inheritance-test.js
101 silly gunzTarPerm extractEntry test/core/start-stop-json-array-test.js
102 silly gunzTarPerm extractEntry test/core/start-stop-json-obj-test.js
103 silly gunzTarPerm extractEntry test/core/start-stop-relative-test.js
104 silly gunzTarPerm extractEntry test/core/stopall-peaceful-test.js
105 silly gunzTarPerm extractEntry test/core/stopbypid-peaceful-test.js
106 silly gunzTarPerm extractEntry test/core/tail-stopall-test.js
107 silly gunzTarPerm extractEntry test/fixtures/cluster-fork-mode.js
108 silly gunzTarPerm extractEntry test/fixtures/log-on-interval.js
109 silly gunzTarPerm extractEntry test/fixtures/server.js
110 silly gunzTarPerm extractEntry test/fixtures/start-daemon.js
111 silly gunzTarPerm extractEntry test/fixtures/server.json
112 silly gunzTarPerm extractEntry test/fixtures/servers.json
113 silly gunzTarPerm extractEntry test/helpers/index.js
114 silly gunzTarPerm extractEntry test/helpers/macros.js
115 silly gunzTarPerm extractEntry test/helpers/mocks/child-process.js
116 silly gunzTarPerm extractEntry test/helpers/mocks/monitor.js
117 silly gunzTarPerm extractEntry test/helpers/mocks/stream.js
118 silly gunzTarPerm extractEntry test/worker/multiple-workers-test.js
119 silly gunzTarPerm extractEntry test/worker/simple-test.js
120 silly lockFile 36e8fbce-s-KHC-npm-forever-0-15-1-package tar:///Users/KHC/.npm/forever/0.15.1/package
121 silly lockFile 36e8fbce-s-KHC-npm-forever-0-15-1-package tar:///Users/KHC/.npm/forever/0.15.1/package
122 silly lockFile 003347ca-C-npm-forever-0-15-1-package-tgz tar:///Users/KHC/.npm/forever/0.15.1/package.tgz
123 silly lockFile 003347ca-C-npm-forever-0-15-1-package-tgz tar:///Users/KHC/.npm/forever/0.15.1/package.tgz
124 verbose chmod /Users/KHC/.npm/forever/0.15.1/package.tgz 644
125 verbose chown /Users/KHC/.npm/forever/0.15.1/package.tgz [ 501, 20 ]
126 silly lockFile e07f8c4a-forever forever
127 silly lockFile e07f8c4a-forever forever
128 silly resolved [ { name: 'forever',
128 silly resolved     preferGlobal: 'true',
128 silly resolved     description: 'A simple CLI tool for ensuring that a given node script runs continuously (i.e. forever)',
128 silly resolved     version: '0.15.1',
128 silly resolved     author: { name: 'Charlie Robbins', email: 'charlie.robbins@gmail.com' },
128 silly resolved     maintainers: [ [Object], [Object] ],
128 silly resolved     repository: { type: 'git', url: 'http://github.com/nodejitsu/forever.git' },
128 silly resolved     keywords: [ 'cli', 'fault tolerant', 'sysadmin', 'tools' ],
128 silly resolved     dependencies:
128 silly resolved      { cliff: '~0.1.9',
128 silly resolved        clone: '^1.0.2',
128 silly resolved        colors: '~0.6.2',
128 silly resolved        flatiron: '~0.4.2',
128 silly resolved        'forever-monitor': '~1.6.0',
128 silly resolved        nconf: '~0.6.9',
128 silly resolved        nssocket: '~0.5.1',
128 silly resolved        'object-assign': '^3.0.0',
128 silly resolved        optimist: '~0.6.0',
128 silly resolved        'path-is-absolute': '~1.0.0',
128 silly resolved        prettyjson: '^1.1.2',
128 silly resolved        shush: '^1.0.0',
128 silly resolved        timespan: '~2.3.0',
128 silly resolved        utile: '~0.2.1',
128 silly resolved        winston: '~0.8.1' },
128 silly resolved     devDependencies:
128 silly resolved      { broadway: '~0.3.6',
128 silly resolved        eventemitter2: '0.4.x',
128 silly resolved        request: '2.x.x',
128 silly resolved        vows: '0.7.x' },
128 silly resolved     bin: { forever: './bin/forever' },
128 silly resolved     main: './lib/forever',
128 silly resolved     scripts: { test: 'vows test/**/*-test.js --spec -i' },
128 silly resolved     engines: { node: '>= 0.8.x' },
128 silly resolved     license: 'MIT',
128 silly resolved     readme: '# forever\n\n[![Version npm](https://img.shields.io/npm/v/forever.svg?style=flat-square)](https://www.npmjs.com/package/forever)[![npm Downloads](https://img.shields.io/npm/dm/forever.svg?style=flat-square)](https://www.npmjs.com/package/forever)[![Build Status](https://img.shields.io/travis/foreverjs/forever/master.svg?style=flat-square)](https://travis-ci.org/foreverjs/forever)[![Dependencies](https://img.shields.io/david/foreverjs/forever.svg?style=flat-square)](https://david-dm.org/foreverjs/forever)[![Inline docs](http://inch-ci.org/github/foreverjs/forever.svg?branch=master)](http://inch-ci.org/github/foreverjs/forever)\n\n[![NPM](https://nodei.co/npm/forever.png?downloads=true&downloadRank=true)](https://nodei.co/npm/forever/)\n\n\nA simple CLI tool for ensuring that a given script runs continuously (i.e. forever).\n\n## Installation\n\n``` bash\n  $ [sudo] npm install forever -g\n```\n\n**Note:** If you are using forever _programmatically_ you should install [forever-monitor][0].\n\n``` bash\n  $ cd /path/to/your/project\n  $ [sudo] npm install forever-monitor\n```\n\n## Usage\nThere are two ways to use forever: through the command line or by using forever in your code. **Note:** If you are using forever _programatically_ you should install [forever-monitor][0].\n\n### Command Line Usage\nYou can use forever to run scripts continuously (whether it is written in node.js or not).\n\n**Example**\n```\nforever start app.js\n```\n\n**Options**\n```\n  $ forever --help\n  usage: forever [action] [options] SCRIPT [script-options]\n\n  Monitors the script specified in the current process or as a daemon\n\n  actions:\n    start               Start SCRIPT as a daemon\n    stop                Stop the daemon SCRIPT by Id|Uid|Pid|Index|Script\n    stopall             Stop all running forever scripts\n    restart             Restart the daemon SCRIPT\n    restartall          Restart all running forever scripts\n    list                List all running forever scripts\n    config              Lists all forever user configuration\n    set <key> <val>     Sets the specified forever config <key>\n    clear <key>         Clears the specified forever config <key>\n    logs                Lists log files for all forever processes\n    logs <script|index> Tails the logs for <script|index>\n    columns add <col>   Adds the specified column to the output in `forever list`\n    columns rm <col>    Removed the specified column from the output in `forever list`\n    columns set <cols>  Set all columns for the output in `forever list`\n    cleanlogs           [CAREFUL] Deletes all historical forever log files\n\n  options:\n    -m  MAX          Only run the specified script MAX times\n    -l  LOGFILE      Logs the forever output to LOGFILE\n    -o  OUTFILE      Logs stdout from child script to OUTFILE\n    -e  ERRFILE      Logs stderr from child script to ERRFILE\n    -p  PATH         Base path for all forever related files (pid files, etc.)\n    -c  COMMAND      COMMAND to execute (defaults to node)\n    -a, --append     Append logs\n    -f, --fifo       Stream logs to stdout\n    -n, --number     Number of log lines to print\n    --pidFile        The pid file\n    --uid            Process uid, useful as a namespace for processes (must wrap in a string)\n                     e.g. forever start --uid "production" app.js\n                         forever stop production\n    --sourceDir      The source directory for which SCRIPT is relative to\n    --workingDir     The working directory in which SCRIPT will execute\n    --minUptime      Minimum uptime (millis) for a script to not be considered "spinning"\n    --spinSleepTime  Time to wait (millis) between launches of a spinning script.\n    --colors         --no-colors will disable output coloring\n    --plain          Disable command line colors\n    -d, --debug      Forces forever to log debug output\n    -v, --verbose    Turns on the verbose messages from Forever\n    -s, --silent     Run the child script silencing stdout and stderr\n    -w, --watch      Watch for file changes\n    --watchDirectory Top-level directory to watch from\n    --watchIgnore    To ignore pattern when watch is enabled (multiple option is allowed)\n    --killSignal     Support exit signal customization (default is SIGKILL),\n                     used for restarting script gracefully e.g. --killSignal=SIGTERM\n    -h, --help       You\'re staring at it\n\n  [Long Running Process]\n    The forever process will continue to run outputting log messages to the console.\n    ex. forever -o out.log -e err.log my-script.js\n\n  [Daemon]\n    The forever process will run as a daemon which will make the target process start\n    in the background. This is extremely useful for remote starting simple node.js scripts\n    without using nohup. It is recommended to run start with -o -l, & -e.\n    ex. forever start -l forever.log -o out.log -e err.log my-daemon.js\n        forever stop my-daemon.js\n```\n\nThere are [several examples][1] designed to test the fault tolerance of forever. Here\'s a simple usage example:\n\n``` bash\n  $ forever -m 5 examples/error-on-timer.js\n```\n\n### JSON Configuration Files\n\nIn addition to passing forever the path to a script (along with accompanying options, described above), you may also pass forever the path to a JSON file containing these options. For example, consider an application with the following file structure:\n\n```\n.\n├── forever\n│   └── development.json\n└── index.js\n\n// forever/development.json\n{\n\t// Comments are supported\n    "uid": "app",\n    "append": true,\n    "watch": true,\n    "script": "index.js",\n    "sourceDir": "/home/myuser/app"\n}\n```\n\nThis application could be started with forever, as shown below:\n\n``` bash\n$ forever start ./forever/development.json\n```\n\nAbsolute paths to such configuration files are also supported:\n\n``` bash\n$ forever start /home/myuser/app/forever/development.json\n```\n\n**Note:** Forever parses JSON configuration files using [shush](https://github.com/krakenjs/shush), allowing the use of in-line comments within such files.\n\n#### Multi-App Configuration Files\n\nJSON configuration files can also be used to define the startup options for *multiple* applications, as shown below.\n\n```\n[\n  {\n    // App1\n    "uid": "app1",\n    "append": true,\n    "watch": true,\n    "script": "index.js",\n    "sourceDir": "/home/myuser/app1"\n  },\n  {\n    // App2\n    "uid": "app2",\n    "append": true,\n    "watch": true,\n    "script": "index.js",\n    "sourceDir": "/home/myuser/app2",\n    "args": ["--port", "8081"]\n  }\n]\n```\n\n### Using In Your Code\nThe forever module exposes some useful methods to use in your code. Each method returns an instance of an EventEmitter which emits when complete. See the [forever cli commands][2] for sample usage.\n\n**Remark:** As of `forever@0.6.0` processes will not automatically be available in `forever.list()`. In order to get your processes into `forever.list()` or `forever list` you must instantiate the `forever` socket server:\n\n``` js\n  forever.startServer(child);\n```\n\nThis method takes multiple `forever.Monitor` instances which are defined in the `forever-monitor` dependency.\n\n#### forever.load (config)\n_Synchronously_ sets the specified configuration (config) for the forever module. There are two important options:\n\nOption    | Description                                       | Default\n-------   | ------------------------------------------------- | ---------\nroot      | Directory to put all default forever log files    | `forever.root`\npidPath   | Directory to put all forever *.pid files          | `[root]/pids`\nsockPath  | Directory for sockets for IPC between workers     | `[root]/sock`\nloglength | Number of logs to return in `forever tail`        | 100\ncolumns   | Array of columns to display when `format` is true | `forever.config.get(\'columns\')`\ndebug     | Boolean value indicating to run in debug mode     | false\nstream    | Boolean value indicating if logs will be streamed | false\n\n#### forever.start (file, options)\nStarts a script with forever. The `options` object is what is expected by the `Monitor` of `forever-monitor`.\n\n#### forever.startDaemon (file, options)\nStarts a script with forever as a daemon. WARNING: Will daemonize the current process. The `options` object is what is expected by the `Monitor` of `forever-monitor`.\n\n#### forever.stop (index)\nStops the forever daemon script at the specified index. These indices are the same as those returned by forever.list(). This method returns an EventEmitter that raises the \'stop\' event when complete.\n\n#### forever.stopAll (format)\nStops all forever scripts currently running. This method returns an EventEmitter that raises the \'stopAll\' event when complete.\n\nThe `format` parameter is a boolean value indicating whether the returned values should be formatted according to the configured columns which can set with `forever columns` or programmatically `forever.config.set(\'columns\')`.\n\n#### forever.list (format, callback)\nReturns a list of metadata objects about each process that is being run using forever. This method will return the list of metadata as such. Only processes which have invoked `forever.startServer()` will be available from `forever.list()`\n\nThe `format` parameter is a boolean value indicating whether the returned values should be formatted according to the configured columns which can set with `forever columns` or programmatically `forever.config.set(\'columns\')`.\n\n#### forever.tail (target, options, callback)\nResponds with the logs from the target script(s) from `tail`. There are two options:\n\n* `length` (numeric): is is used as the `-n` parameter to `tail`.\n* `stream` (boolean): is is used as the `-f` parameter to `tail`.\n\n#### forever.cleanUp ()\nCleans up any extraneous forever *.pid files that are on the target system. This method returns an EventEmitter that raises the \'cleanUp\' event when complete.\n\n#### forever.cleanLogsSync (processes)\nRemoves all log files from the root forever directory that do not belong to current running forever processes. Processes are the value returned from `Monitor.data` in `forever-monitor`.\n\n#### forever.startServer (monitor0, monitor1, ..., monitorN)\nStarts the `forever` HTTP server for communication with the forever CLI. **NOTE:** This will change your `process.title`. This method takes multiple `forever.Monitor` instances which are defined in the `forever-monitor` dependency.\n\n### Logging and output file locations\n\nBy default `forever` places all of the files it needs into `/$HOME/.forever`. If you would like to change that location just set the `FOREVER_ROOT` environment variable when you are running forever:\n\n```\nFOREVER_ROOT=/etc/forever forever start index.js\n```\n\nMake sure that the user running the process has the appropriate privileges to read & write to this directory.\n\n## Run Tests\n\n``` bash\n  $ npm test\n```\n\n#### License: MIT\n#### Author: [Charlie Robbins](https://github.com/indexzero)\n#### Contributors: [Fedor Indutny](https://github.com/indutny), [James Halliday](http://substack.net/), [Charlie McConnell](https://github.com/avianflu), [Maciej Malecki](https://github.com/mmalecki), [John Lancaster](http://jlank.com)\n\n[0]: https://github.com/foreverjs/forever-monitor\n[1]: https://github.com/foreverjs/forever-monitor/tree/master/examples\n[2]: https://github.com/foreverjs/forever/blob/master/lib/forever/cli.js\n',
128 silly resolved     readmeFilename: 'README.md',
128 silly resolved     bugs: { url: 'https://github.com/nodejitsu/forever/issues' },
128 silly resolved     homepage: 'https://github.com/nodejitsu/forever',
128 silly resolved     _id: 'forever@0.15.1',
128 silly resolved     dist: { shasum: '807568d902f33845aa30918b212260305a944b90' },
128 silly resolved     _from: 'forever',
128 silly resolved     _resolved: 'https://registry.npmjs.org/forever/-/forever-0.15.1.tgz' } ]
129 info install forever@0.15.1 into /usr/local/lib
130 info installOne forever@0.15.1
131 info /usr/local/lib/node_modules/forever unbuild
132 verbose tar unpack /Users/KHC/.npm/forever/0.15.1/package.tgz
133 silly lockFile 5fd21e72-r-local-lib-node-modules-forever tar:///usr/local/lib/node_modules/forever
134 verbose lock tar:///usr/local/lib/node_modules/forever /Users/KHC/.npm/5fd21e72-r-local-lib-node-modules-forever.lock
135 silly lockFile 003347ca-C-npm-forever-0-15-1-package-tgz tar:///Users/KHC/.npm/forever/0.15.1/package.tgz
136 verbose lock tar:///Users/KHC/.npm/forever/0.15.1/package.tgz /Users/KHC/.npm/003347ca-C-npm-forever-0-15-1-package-tgz.lock
137 silly gunzTarPerm modes [ '755', '644' ]
138 error Error: EACCES, mkdir '/usr/local/lib/node_modules/forever'
138 error  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/forever']
138 error   errno: 3,
138 error   code: 'EACCES',
138 error   path: '/usr/local/lib/node_modules/forever',
138 error   fstream_type: 'Directory',
138 error   fstream_path: '/usr/local/lib/node_modules/forever',
138 error   fstream_class: 'DirWriter',
138 error   fstream_stack:
138 error    [ '/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23',
138 error      '/usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53',
138 error      'Object.oncomplete (fs.js:107:15)' ] }
139 error Please try running this command again as root/Administrator.
140 error System Darwin 15.0.0
141 error command "node" "/usr/local/bin/npm" "install" "forever" "-g"
142 error cwd /Users/KHC/Documents/workspace/museek-server/node_modules
143 error node -v v0.10.22
144 error npm -v 1.3.14
145 error path /usr/local/lib/node_modules/forever
146 error fstream_path /usr/local/lib/node_modules/forever
147 error fstream_type Directory
148 error fstream_class DirWriter
149 error code EACCES
150 error errno 3
151 error stack Error: EACCES, mkdir '/usr/local/lib/node_modules/forever'
152 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23
152 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53
152 error fstream_stack Object.oncomplete (fs.js:107:15)
153 verbose exit [ 3, true ]
